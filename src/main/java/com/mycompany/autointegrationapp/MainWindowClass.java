/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.autointegrationapp;

/*import com.j256.ormlite.dao.Dao;
 import com.j256.ormlite.dao.DaoManager;
 import com.j256.ormlite.jdbc.JdbcConnectionSource;
 import com.j256.ormlite.support.ConnectionSource;
 */
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
/*import java.sql.SQLException;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 import javax.swing.JFileChooser;
 import javax.swing.JTable;
 */
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

/**
 *
 * @author Lennoximus
 */
public class MainWindowClass extends javax.swing.JFrame {

    public String settingsNameFile = null;

    public void setSettingsNameFile(String temp) {
        this.settingsNameFile = temp;
    }

    public String getSettingsNameFile() {
        return (this.settingsNameFile);
    }

    /*private final String url = "jdbc:postgresql://localhost:5432/";
     private ConnectionSource source;
     private Dao<MedicalExaminationTable, String> MedicalExaminationTableDao;

     public List<MedicalExaminationTable> getAll() throws SQLException {
     return MedicalExaminationTableDao.queryForAll();
     }
     */
    public MainWindowClass()/* throws SQLException */ {
        initComponents();
        logTextArea_.setText("> Welcome to the Automatic Database Integration App.\n> Proceed typing commands. Use 'Help'-Button for any help needed.");
        /*source = new JdbcConnectionSource(url);
         MedicalExaminationTableDao = DaoManager.createDao(source, MedicalExaminationTable.class);
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        logTextArea_ = new javax.swing.JTextArea();
        mainFrameMenuBar_ = new javax.swing.JMenuBar();
        barFileMenu_ = new javax.swing.JMenu();
        barFileMenuOpenSettItem_ = new javax.swing.JMenuItem();
        barFileMenuHelpItem_ = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        barFileMenuExitItem_ = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Автоматическая интеграция");

        logTextArea_.setEditable(false);
        logTextArea_.setColumns(20);
        logTextArea_.setRows(5);
        jScrollPane1.setViewportView(logTextArea_);

        barFileMenu_.setText("Файл");

        barFileMenuOpenSettItem_.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        barFileMenuOpenSettItem_.setText("Открыть файл...");
        barFileMenuOpenSettItem_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barFileMenuOpenSettItem_ActionPerformed(evt);
            }
        });
        barFileMenu_.add(barFileMenuOpenSettItem_);

        barFileMenuHelpItem_.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        barFileMenuHelpItem_.setText("Справка");
        barFileMenu_.add(barFileMenuHelpItem_);
        barFileMenu_.add(jSeparator1);

        barFileMenuExitItem_.setText("Выход");
        barFileMenuExitItem_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barFileMenuExitItem_ActionPerformed(evt);
            }
        });
        barFileMenu_.add(barFileMenuExitItem_);

        mainFrameMenuBar_.add(barFileMenu_);

        setJMenuBar(mainFrameMenuBar_);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(433, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void barFileMenuOpenSettItem_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barFileMenuOpenSettItem_ActionPerformed
        FileChooserDialog openFileDialog = new FileChooserDialog();
        setSettingsNameFile(openFileDialog.getFileAbsolutePath());
        try {
            FileInputStream fileInputStream = new FileInputStream(getSettingsNameFile());
            logTextArea_.append("\n> File '" + getSettingsNameFile() + "' has been opened successfully.");
            HSSFWorkbook inputWorkbook = new HSSFWorkbook(fileInputStream);
            FileOutputStream out = new FileOutputStream(new File("reportTextBook.xls"));
            HSSFSheet inputWorksheet = inputWorkbook.getSheet("Лист1");
            HSSFRow row1 = inputWorksheet.getRow(0);
            int numElements = 5;
            int counter = 0;
            //double[] inputDataArray = new double[numElements];
            for (int i = 0; i < numElements; i++) {
                HSSFCell cell = row1.getCell((short) i);
                //data[i] = cell.getNumericCellValue();
                if (cell.getNumericCellValue() % 2 == 0) {
                    counter++;
                }
            }
            logTextArea_.append(Integer.toString(counter));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_barFileMenuOpenSettItem_ActionPerformed

    private void barFileMenuExitItem_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barFileMenuExitItem_ActionPerformed
        dispose();
    }//GEN-LAST:event_barFileMenuExitItem_ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindowClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindowClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindowClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindowClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindowClass().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem barFileMenuExitItem_;
    private javax.swing.JMenuItem barFileMenuHelpItem_;
    private javax.swing.JMenuItem barFileMenuOpenSettItem_;
    private javax.swing.JMenu barFileMenu_;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea logTextArea_;
    private javax.swing.JMenuBar mainFrameMenuBar_;
    // End of variables declaration//GEN-END:variables
}
